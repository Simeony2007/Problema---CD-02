// Copyright (C) 2025  Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus Prime License Agreement,
// the Altera IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Altera and sold by Altera or its authorized distributors.  Please
// refer to the Altera Software License Subscription Agreements 
// on the Quartus Prime software download page.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "10/28/2025 18:44:05"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          RPNInput
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module RPNInput_vlg_vec_tst();
// constants                                           
// general purpose registers
reg [7:0] A;
reg Btn;
reg Rst;
// wires                                               
wire [1:0] Contador;
wire [7:0] T0;
wire [7:0] T1;
wire [7:0] T2;

// assign statements (if any)                          
RPNInput i1 (
// port map - connection between master ports and signals/registers   
	.A(A),
	.Btn(Btn),
	.Contador(Contador),
	.Rst(Rst),
	.T0(T0),
	.T1(T1),
	.T2(T2)
);
initial 
begin 
#1000000 $finish;
end 
// A[ 7 ]
initial
begin
	A[7] = 1'b0;
	A[7] = #60000 1'b1;
	A[7] = #50000 1'b0;
	A[7] = #80000 1'b1;
	A[7] = #100000 1'b0;
	A[7] = #50000 1'b1;
	A[7] = #260000 1'b0;
end 
// A[ 6 ]
initial
begin
	A[6] = 1'b0;
	A[6] = #60000 1'b1;
	A[6] = #50000 1'b0;
	A[6] = #80000 1'b1;
	A[6] = #100000 1'b0;
	A[6] = #50000 1'b1;
	A[6] = #260000 1'b0;
end 
// A[ 5 ]
initial
begin
	A[5] = 1'b0;
	A[5] = #60000 1'b1;
	A[5] = #50000 1'b0;
	A[5] = #80000 1'b1;
	A[5] = #100000 1'b0;
	A[5] = #50000 1'b1;
	A[5] = #260000 1'b0;
end 
// A[ 4 ]
initial
begin
	A[4] = 1'b0;
	A[4] = #60000 1'b1;
	A[4] = #50000 1'b0;
	A[4] = #80000 1'b1;
	A[4] = #100000 1'b0;
	A[4] = #50000 1'b1;
	A[4] = #260000 1'b0;
end 
// A[ 3 ]
initial
begin
	A[3] = 1'b0;
	A[3] = #60000 1'b1;
	A[3] = #50000 1'b0;
	A[3] = #230000 1'b1;
	A[3] = #90000 1'b0;
end 
// A[ 2 ]
initial
begin
	A[2] = 1'b0;
	A[2] = #60000 1'b1;
	A[2] = #50000 1'b0;
	A[2] = #230000 1'b1;
	A[2] = #90000 1'b0;
end 
// A[ 1 ]
initial
begin
	A[1] = 1'b0;
	A[1] = #60000 1'b1;
	A[1] = #50000 1'b0;
	A[1] = #230000 1'b1;
	A[1] = #90000 1'b0;
end 
// A[ 0 ]
initial
begin
	A[0] = 1'b0;
	A[0] = #60000 1'b1;
	A[0] = #50000 1'b0;
	A[0] = #230000 1'b1;
	A[0] = #90000 1'b0;
end 

// Btn
initial
begin
	Btn = 1'b0;
	Btn = #80000 1'b1;
	Btn = #20000 1'b0;
	Btn = #130000 1'b1;
	Btn = #20000 1'b0;
	Btn = #100000 1'b1;
	Btn = #10000 1'b0;
	Btn = #80000 1'b1;
	Btn = #30000 1'b0;
end 

// Rst
initial
begin
	Rst = 1'b0;
end 
endmodule

