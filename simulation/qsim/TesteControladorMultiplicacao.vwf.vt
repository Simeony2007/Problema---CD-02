// Copyright (C) 2025  Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus Prime License Agreement,
// the Altera IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Altera and sold by Altera or its authorized distributors.  Please
// refer to the Altera Software License Subscription Agreements 
// on the Quartus Prime software download page.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "10/30/2025 15:10:49"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          ControleMultiplicacao
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module ControleMultiplicacao_vlg_vec_tst();
// constants                                           
// general purpose registers
reg Clk;
reg Rst;
reg Start;
reg [2:0] contador;
// wires                                               
wire Finalizado;
wire acumula;
wire ativCont;
wire limpaCont;

// assign statements (if any)                          
ControleMultiplicacao i1 (
// port map - connection between master ports and signals/registers   
	.Clk(Clk),
	.Finalizado(Finalizado),
	.Rst(Rst),
	.Start(Start),
	.acumula(acumula),
	.ativCont(ativCont),
	.contador(contador),
	.limpaCont(limpaCont)
);
initial 
begin 
#40000 $finish;
end 

// Clk
always
begin
	Clk = 1'b0;
	Clk = #5000 1'b1;
	#5000;
end 

// Rst
initial
begin
	Rst = 1'b0;
end 

// Start
initial
begin
	Start = 1'b1;
	Start = #5000 1'b0;
end 
// contador[ 2 ]
always
begin
	contador[2] = 1'b0;
	contador[2] = #20000 1'b1;
	#20000;
end 
// contador[ 1 ]
always
begin
	contador[1] = 1'b0;
	contador[1] = #10000 1'b1;
	#10000;
end 
// contador[ 0 ]
always
begin
	contador[0] = 1'b0;
	contador[0] = #5000 1'b1;
	#5000;
end 
endmodule

