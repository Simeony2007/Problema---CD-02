// Copyright (C) 2025  Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus Prime License Agreement,
// the Altera IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Altera and sold by Altera or its authorized distributors.  Please
// refer to the Altera Software License Subscription Agreements 
// on the Quartus Prime software download page.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "10/28/2025 21:12:08"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          Shifter
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module Shifter_vlg_vec_tst();
// constants                                           
// general purpose registers
reg [2:0] Contador;
reg [15:0] P1;
reg [15:0] P2;
reg [15:0] P3;
reg [15:0] P4;
reg [15:0] P5;
reg [15:0] P6;
reg [15:0] P7;
reg [15:0] P8;
// wires                                               
wire [15:0] S;

// assign statements (if any)                          
Shifter i1 (
// port map - connection between master ports and signals/registers   
	.Contador(Contador),
	.P1(P1),
	.P2(P2),
	.P3(P3),
	.P4(P4),
	.P5(P5),
	.P6(P6),
	.P7(P7),
	.P8(P8),
	.S(S)
);
initial 
begin 
#40000 $finish;
end 
// Contador[ 2 ]
always
begin
	Contador[2] = 1'b0;
	Contador[2] = #20000 1'b1;
	#20000;
end 
// Contador[ 1 ]
always
begin
	Contador[1] = 1'b0;
	Contador[1] = #10000 1'b1;
	#10000;
end 
// Contador[ 0 ]
always
begin
	Contador[0] = 1'b0;
	Contador[0] = #5000 1'b1;
	#5000;
end 
// P1[ 15 ]
initial
begin
	P1[15] = 1'b0;
end 
// P1[ 14 ]
initial
begin
	P1[14] = 1'b0;
end 
// P1[ 13 ]
initial
begin
	P1[13] = 1'b0;
end 
// P1[ 12 ]
initial
begin
	P1[12] = 1'b0;
end 
// P1[ 11 ]
initial
begin
	P1[11] = 1'b0;
end 
// P1[ 10 ]
initial
begin
	P1[10] = 1'b0;
end 
// P1[ 9 ]
initial
begin
	P1[9] = 1'b0;
end 
// P1[ 8 ]
initial
begin
	P1[8] = 1'b0;
end 
// P1[ 7 ]
initial
begin
	P1[7] = 1'b1;
end 
// P1[ 6 ]
initial
begin
	P1[6] = 1'b1;
end 
// P1[ 5 ]
initial
begin
	P1[5] = 1'b1;
end 
// P1[ 4 ]
initial
begin
	P1[4] = 1'b1;
end 
// P1[ 3 ]
initial
begin
	P1[3] = 1'b1;
end 
// P1[ 2 ]
initial
begin
	P1[2] = 1'b1;
end 
// P1[ 1 ]
initial
begin
	P1[1] = 1'b1;
end 
// P1[ 0 ]
initial
begin
	P1[0] = 1'b1;
end 
// P2[ 15 ]
initial
begin
	P2[15] = 1'b0;
end 
// P2[ 14 ]
initial
begin
	P2[14] = 1'b0;
end 
// P2[ 13 ]
initial
begin
	P2[13] = 1'b0;
end 
// P2[ 12 ]
initial
begin
	P2[12] = 1'b0;
end 
// P2[ 11 ]
initial
begin
	P2[11] = 1'b0;
end 
// P2[ 10 ]
initial
begin
	P2[10] = 1'b0;
end 
// P2[ 9 ]
initial
begin
	P2[9] = 1'b0;
end 
// P2[ 8 ]
initial
begin
	P2[8] = 1'b1;
end 
// P2[ 7 ]
initial
begin
	P2[7] = 1'b1;
end 
// P2[ 6 ]
initial
begin
	P2[6] = 1'b1;
end 
// P2[ 5 ]
initial
begin
	P2[5] = 1'b1;
end 
// P2[ 4 ]
initial
begin
	P2[4] = 1'b1;
end 
// P2[ 3 ]
initial
begin
	P2[3] = 1'b1;
end 
// P2[ 2 ]
initial
begin
	P2[2] = 1'b1;
end 
// P2[ 1 ]
initial
begin
	P2[1] = 1'b1;
end 
// P2[ 0 ]
initial
begin
	P2[0] = 1'b0;
end 
// P3[ 15 ]
initial
begin
	P3[15] = 1'b0;
end 
// P3[ 14 ]
initial
begin
	P3[14] = 1'b0;
end 
// P3[ 13 ]
initial
begin
	P3[13] = 1'b0;
end 
// P3[ 12 ]
initial
begin
	P3[12] = 1'b0;
end 
// P3[ 11 ]
initial
begin
	P3[11] = 1'b0;
end 
// P3[ 10 ]
initial
begin
	P3[10] = 1'b0;
end 
// P3[ 9 ]
initial
begin
	P3[9] = 1'b1;
end 
// P3[ 8 ]
initial
begin
	P3[8] = 1'b1;
end 
// P3[ 7 ]
initial
begin
	P3[7] = 1'b1;
end 
// P3[ 6 ]
initial
begin
	P3[6] = 1'b1;
end 
// P3[ 5 ]
initial
begin
	P3[5] = 1'b1;
end 
// P3[ 4 ]
initial
begin
	P3[4] = 1'b1;
end 
// P3[ 3 ]
initial
begin
	P3[3] = 1'b1;
end 
// P3[ 2 ]
initial
begin
	P3[2] = 1'b1;
end 
// P3[ 1 ]
initial
begin
	P3[1] = 1'b0;
end 
// P3[ 0 ]
initial
begin
	P3[0] = 1'b0;
end 
// P4[ 15 ]
initial
begin
	P4[15] = 1'b0;
end 
// P4[ 14 ]
initial
begin
	P4[14] = 1'b0;
end 
// P4[ 13 ]
initial
begin
	P4[13] = 1'b0;
end 
// P4[ 12 ]
initial
begin
	P4[12] = 1'b0;
end 
// P4[ 11 ]
initial
begin
	P4[11] = 1'b0;
end 
// P4[ 10 ]
initial
begin
	P4[10] = 1'b1;
end 
// P4[ 9 ]
initial
begin
	P4[9] = 1'b1;
end 
// P4[ 8 ]
initial
begin
	P4[8] = 1'b1;
end 
// P4[ 7 ]
initial
begin
	P4[7] = 1'b1;
end 
// P4[ 6 ]
initial
begin
	P4[6] = 1'b1;
end 
// P4[ 5 ]
initial
begin
	P4[5] = 1'b1;
end 
// P4[ 4 ]
initial
begin
	P4[4] = 1'b1;
end 
// P4[ 3 ]
initial
begin
	P4[3] = 1'b1;
end 
// P4[ 2 ]
initial
begin
	P4[2] = 1'b0;
end 
// P4[ 1 ]
initial
begin
	P4[1] = 1'b0;
end 
// P4[ 0 ]
initial
begin
	P4[0] = 1'b0;
end 
// P5[ 15 ]
initial
begin
	P5[15] = 1'b0;
end 
// P5[ 14 ]
initial
begin
	P5[14] = 1'b0;
end 
// P5[ 13 ]
initial
begin
	P5[13] = 1'b0;
end 
// P5[ 12 ]
initial
begin
	P5[12] = 1'b0;
end 
// P5[ 11 ]
initial
begin
	P5[11] = 1'b1;
end 
// P5[ 10 ]
initial
begin
	P5[10] = 1'b1;
end 
// P5[ 9 ]
initial
begin
	P5[9] = 1'b1;
end 
// P5[ 8 ]
initial
begin
	P5[8] = 1'b1;
end 
// P5[ 7 ]
initial
begin
	P5[7] = 1'b1;
end 
// P5[ 6 ]
initial
begin
	P5[6] = 1'b1;
end 
// P5[ 5 ]
initial
begin
	P5[5] = 1'b1;
end 
// P5[ 4 ]
initial
begin
	P5[4] = 1'b1;
end 
// P5[ 3 ]
initial
begin
	P5[3] = 1'b0;
end 
// P5[ 2 ]
initial
begin
	P5[2] = 1'b0;
end 
// P5[ 1 ]
initial
begin
	P5[1] = 1'b0;
end 
// P5[ 0 ]
initial
begin
	P5[0] = 1'b0;
end 
// P6[ 15 ]
initial
begin
	P6[15] = 1'b0;
end 
// P6[ 14 ]
initial
begin
	P6[14] = 1'b0;
end 
// P6[ 13 ]
initial
begin
	P6[13] = 1'b0;
end 
// P6[ 12 ]
initial
begin
	P6[12] = 1'b1;
end 
// P6[ 11 ]
initial
begin
	P6[11] = 1'b1;
end 
// P6[ 10 ]
initial
begin
	P6[10] = 1'b1;
end 
// P6[ 9 ]
initial
begin
	P6[9] = 1'b1;
end 
// P6[ 8 ]
initial
begin
	P6[8] = 1'b1;
end 
// P6[ 7 ]
initial
begin
	P6[7] = 1'b1;
end 
// P6[ 6 ]
initial
begin
	P6[6] = 1'b1;
end 
// P6[ 5 ]
initial
begin
	P6[5] = 1'b1;
end 
// P6[ 4 ]
initial
begin
	P6[4] = 1'b0;
end 
// P6[ 3 ]
initial
begin
	P6[3] = 1'b0;
end 
// P6[ 2 ]
initial
begin
	P6[2] = 1'b0;
end 
// P6[ 1 ]
initial
begin
	P6[1] = 1'b0;
end 
// P6[ 0 ]
initial
begin
	P6[0] = 1'b0;
end 
// P7[ 15 ]
initial
begin
	P7[15] = 1'b0;
end 
// P7[ 14 ]
initial
begin
	P7[14] = 1'b0;
end 
// P7[ 13 ]
initial
begin
	P7[13] = 1'b1;
end 
// P7[ 12 ]
initial
begin
	P7[12] = 1'b1;
end 
// P7[ 11 ]
initial
begin
	P7[11] = 1'b1;
end 
// P7[ 10 ]
initial
begin
	P7[10] = 1'b1;
end 
// P7[ 9 ]
initial
begin
	P7[9] = 1'b1;
end 
// P7[ 8 ]
initial
begin
	P7[8] = 1'b1;
end 
// P7[ 7 ]
initial
begin
	P7[7] = 1'b1;
end 
// P7[ 6 ]
initial
begin
	P7[6] = 1'b1;
end 
// P7[ 5 ]
initial
begin
	P7[5] = 1'b0;
end 
// P7[ 4 ]
initial
begin
	P7[4] = 1'b0;
end 
// P7[ 3 ]
initial
begin
	P7[3] = 1'b0;
end 
// P7[ 2 ]
initial
begin
	P7[2] = 1'b0;
end 
// P7[ 1 ]
initial
begin
	P7[1] = 1'b0;
end 
// P7[ 0 ]
initial
begin
	P7[0] = 1'b0;
end 
// P8[ 15 ]
initial
begin
	P8[15] = 1'b0;
end 
// P8[ 14 ]
initial
begin
	P8[14] = 1'b1;
end 
// P8[ 13 ]
initial
begin
	P8[13] = 1'b1;
end 
// P8[ 12 ]
initial
begin
	P8[12] = 1'b1;
end 
// P8[ 11 ]
initial
begin
	P8[11] = 1'b1;
end 
// P8[ 10 ]
initial
begin
	P8[10] = 1'b1;
end 
// P8[ 9 ]
initial
begin
	P8[9] = 1'b1;
end 
// P8[ 8 ]
initial
begin
	P8[8] = 1'b1;
end 
// P8[ 7 ]
initial
begin
	P8[7] = 1'b1;
end 
// P8[ 6 ]
initial
begin
	P8[6] = 1'b0;
end 
// P8[ 5 ]
initial
begin
	P8[5] = 1'b0;
end 
// P8[ 4 ]
initial
begin
	P8[4] = 1'b0;
end 
// P8[ 3 ]
initial
begin
	P8[3] = 1'b0;
end 
// P8[ 2 ]
initial
begin
	P8[2] = 1'b0;
end 
// P8[ 1 ]
initial
begin
	P8[1] = 1'b0;
end 
// P8[ 0 ]
initial
begin
	P8[0] = 1'b0;
end 
endmodule

